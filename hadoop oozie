Prerequisites

    Linux OS: I'm using Ubuntu 16.10 x64.
    Non-root user with sudo permission.
    Java JDK >=1.8 installed.
        $JAVA_HOME environment variable is set.
        Add $JAVA_HOME/bin to $PATH, make sure java and javac tools can be called on console.
    Maven 3.0.1+.
        Make sure mvn tool can be called on console.
    Pig 0.7+.
        Make sure pig tool can be called on console.
    Packages:
        wget, tar, unzip.

Oozie runs on HDFS so we have to install Hadoop first.
1. Install Hadoop standalone (single-node-cluster)
1.1. Download Hadoop archive

Go to Hadoop release page and download the Hadoop archive binary. I'm using version 2.9.0.

$ cd ~/Downloads   # Choose any places you wants
$ mkdir ozzie && cd oozie
$ wget http://mirrors.viethosting.com/apache/hadoop/common/hadoop-2.9.0/hadoop-2.9.0.tar.gz
$ tar -xzvf hadoop-2.9.0.tar.gz
$ sudo mv hadoop-2.9.0 /usr/local/hadoop
$ export PATH=$PATH:/usr/local/hadoop/bin
$ which hadoop
/usr/local/hadoop/bin/hadoop

1.2. Configure Hadoop

Configure the $JAVA_HOME env var for Hadoop in /usr/local/hadoop/etc/hadoop/hadoop-env.sh file.

export JAVA_HOME=$(readlink -f $(which java) | sed "s:bin/java::").

$ sudo vi /usr/local/hadoop/etc/hadoop/hadoop-env.sh
export JAVA_HOME=$(readlink -f $(which java) | sed "s:bin/java::")

Also edit your ~/.bashrc file to add some Hadoop environment variables:

$ vi ~/.bashrc
...
export JAVA_HOME=$(readlink -f $(which java) | sed "s:bin/java::")
export HADOOP_HOME=/usr/local/hadoop
export HADOOP_MAPRED_HOME=$HADOOP_HOME
export HADOOP_COMMON_HOME=$HADOOP_HOME
export HADOOP_HDFS_HOME=$HADOOP_HOME
export YARN_HOME=$HADOOP_HOME
export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
export HADOOP_OPTS="-Djava.library.path=$HADOOP_HOME/lib"
export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin
...

$ source ~/.bashrc
$ hadoop version
Hadoop 2.9.0
Subversion https://git-wip-us.apache.org/repos/asf/hadoop.git -r 756ebc8394e473ac25feac05fa493f6d612e6c50
Compiled by arsuresh on 2017-11-13T23:15Z
Compiled with protoc 2.5.0
From source with checksum 0a76a9a32a5257331741f8d5932f183
This command was run using /usr/local/hadoop/share/hadoop/common/hadoop-common-2.9.0.jar

You now successfully installed Hadoop in standalone mode.
2. Configure HDFS to run on Hadoop standalone
2.1. User

We need a user with sudo permission to run Hadoop and Oozie, so create new user or using the current one as your choice.

Here I'm creating new lnquy user. From this to the end of this documentation, I'm assuming we're using lnquy user.

# Create user and its group
$ sudo addgroup lnquy
$ sudo adduser â€“ingroup lnquy lnquy
$ passwd lnquy

# Add sudo permission
$ sudo adduser lnquy sudo

# Change HADOOP_HOME to lnquy onwer
$ sudo chown -R lnquy:lnquy /usr/local/hadoop

# Gen SSH key
$ su lnquy
$ ssh-keygen -t rsa -P ""
$ cat $HOME/.ssh/id_rsa.pub >> $HOME/.ssh/authorized_keys
$ ssh localhost   # Test SSH
$ exit   # Exit SSH, return to current lnquy user

2.2. Configure namenode & datanode

$ sudo mkdir -p /app/hadoop/tmp
$ sudo chown lnquy:lnquy /app/hadoop/tmp

# Configure HDFS dir and URI
$ sudo vi /usr/local/hadoop/etc/hadoop/core-site.xml
<configuration>
  ...
  <property>
      <name>hadoop.tmp.dir</name>
      <value>/app/hadoop/tmp</value>
  </property>
  <property>
    <name>fs.default.name</name>
    <value>hdfs://localhost:54310</value>
  </property>
  ...
</configuration>

# Configure Haddop tracker
$ cp /usr/local/hadoop/etc/hadoop/mapred-site.xml.template /usr/local/hadoop/etc/hadoop/mapred-site.xml
$ sudo vi /usr/local/hadoop/etc/hadoop/mapred-site.xml
<configuration>
  ...
  <property>
    <name>mapred.job.tracker</name>
    <value>localhost:54311</value>
</property>
  ...
</configuration>

# Configure namenode and datanode dirs
$ sudo mkdir -p /usr/local/hadoop_store/hdfs/namenode
$ sudo mkdir -p /usr/local/hadoop_store/hdfs/datanode
$ sudo chown -R lnquy:lnquy /usr/local/hadoop_store

# Configure HDFS
$ sudo vi /usr/local/hadoop/etc/hadoop/hdfs-site.xml
<configuration>
  ...
  <property>
    <name>dfs.replication</name>
    <value>1</value>
  </property>
  <property>
    <name>dfs.namenode.name.dir</name>
    <value>file:/usr/local/hadoop_store/hdfs/namenode</value>
  </property>
  <property>
    <name>dfs.datanode.data.dir</name>
    <value>file:/usr/local/hadoop_store/hdfs/datanode</value>
  </property>
  ...
</configuration>

# Start HDFS
$ cd /usr/local/hadoop_store/hdfs/namenode/
$ hadoop namenode -format
$ cd /usr/local/hadoop/sbin 
$ ./start-all.sh
$ jps   # Verify Hadoop cluster started

    Namonode: http://localhost:50070
    Datanode: http://localhost:50090
    Resource manager: http://localhost:8088

3. Install Ozzie

Note: Skip step 3.1 to 3.2 if you uses the Oozie archive I already built and shipped along with this documentation.
3.1. Download Ozzie

Go to Apache Oozie page and choose the release version. I'm using version 4.3.1 here.

$ cd ~/Downloads/ozzie
$ wget http://mirror.downloadvn.com/apache/oozie/4.3.1/oozie-4.3.1.tar.gz
$ tar-xzvf oozie-4.3.1.tar.gz

# Download Ozzie extension - required for webconsole
$ wget http://archive.cloudera.com/gplextras/misc/ext-2.2.zip

3.2. Build Oozie

$ cd oozie-4.3.1
$ ./bin/mkdistro.sh -DskipTests -P hadoop-2 -Dhadoop.version=2.9.0

If all builds success then the Oozie distribution file will be placed at distro/target/oozie-4.3.1-distro.tar.gz.

$ mkdir ../oozie-dist
$ tar -xzvf distro/target/oozie-4.3.1-distro.tar.gz -C ../oozie-dist
$ cd ../oozie-dist/oozie-4.3.1

3.3. Add libraries to Oozie's libext

Create new libext folder at oozie-dist/oozie-4.3.1/libext and extract ExtJS (downloaded at step 3.1). to libext.

$ mkdir libext
$ mv ../../ext-2.2.zip libext/

# Also copy some Hadoop jars from Hadoop's share dir to libext.
# For simpler, you just have to extract the Oozie archive shipped along with this documentation then copy the libext to your Oozie dir.

3.5. Start Oozie daemon

# Upload Oozie sharelib to HDFS
$ ./bin/oozie-setup.sh sharelib create -fs hdfs://localhost:54310
# Init Oozie database
$ ./bin/ooziedb.sh create -sqlfile oozie.sql -run
# Start daemon
$ ./bin/oozied.sh start

You should see the Oozie web console on http://localhost:11000/oozie/.
